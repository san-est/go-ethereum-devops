version: '3.9'

services:
  geth:
    image: ghcr.io/san-est/go-ethereum-devops:latest
    #ports were grabbed from the docker quick start in the README within https://github.com/ethereum/go-ethereum
    ports:
      - "8545:8545"
      - "30303:30303"
    #enabling RPC server, binding it to all availible networks, sets on which port RPC should listen to and availible APIs.
    command: ["--http", "--http.addr", "0.0.0.0", "--http.port", "8545", "--http.api", "eth,net,web3,txpool", "--http.vhosts", "*"]

#The following part is all from the docker-compose for Blockscout explorer further spread from all of the files in the service directory
#I followed the geth.yml they have in the blockscout/docker-compose directory in GitHub

  redis-db:
    extends:
      file: ./services/redis.yml
      service: redis-db

  db-init:
    extends:
      file: ./services/db.yml
      service: db-init

  db:
    depends_on:
      db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/db.yml
      service: db

  backend:
    depends_on:
      - db
      - redis-db
    extends:
      file: ./services/backend.yml
      service: backend
    links:
      - db:database
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'

  visualizer:
    extends:
      file: ./services/visualizer.yml
      service: visualizer

  sig-provider:
    extends:
      file: ./services/sig-provider.yml
      service: sig-provider

  frontend:
    depends_on:
      - backend
    extends:
      file: ./services/frontend.yml
      service: frontend

  stats-db-init:
    extends:
      file: ./services/stats.yml
      service: stats-db-init

  stats-db:
    depends_on:
      stats-db-init:
        condition: service_completed_successfully
    extends:
      file: ./services/stats.yml
      service: stats-db

  stats:
    depends_on:
      - stats-db
      - backend
    extends:
      file: ./services/stats.yml
      service: stats

  user-ops-indexer:
    depends_on:
      - db
      - backend
    extends:
      file: ./services/user-ops-indexer.yml
      service: user-ops-indexer

  proxy:
    depends_on:
      - backend
      - frontend
      - stats
    extends:
      file: ./services/nginx.yml
      service: proxy